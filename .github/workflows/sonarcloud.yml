name: SonarCloud Analysis

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # Analyse Backend
  sonarcloud-backend:
    runs-on: ubuntu-latest

    steps:
      # Récupère le code du dépôt
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Cache les packages SonarCloud
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-backend

      # Cache Maven pour accélérer la compilation
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}

      # Installation de Java pour SonarCloud
      - name: Set up Java for Backend Analysis
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      # Analyse du backend et envoi des rapports à SonarCloud
      - name: Build Backend & Run SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd back
          mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=Malck_P10_Fullstack_BobApp \
          -Dsonar.organization=malck \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.java.coveragePlugin=jacoco \
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

  # Analyse Frontend
  sonarcloud-frontend:
    runs-on: ubuntu-latest

    steps:
      # Récupère le code du dépôt
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Installation de Node.js pour l'analyse frontend
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Installation des dépendances et exécution des tests Angular
      - name: Install Frontend Dependencies & Run Tests
        working-directory: ./front
        run: |
          npm ci
          npm test -- --code-coverage --browsers=ChromeHeadless --watch=false
        env:
          CI: true

      # Envoi de l'analyse frontend à SonarCloud
      - name: Run SonarCloud for Frontend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}
        run: |
          cd front
          npx sonar-scanner -Dsonar.projectKey=malck_bobapp-frontend \
          -Dsonar.organization=malck \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.sources=src/app \
          -Dsonar.tests=src/app \
          -Dsonar.test.inclusions=src/app/**/*.spec.ts \
          -Dsonar.exclusions=src/environments/**,src/main.ts,src/test.ts,src/styles.scss \
          -Dsonar.typescript.lcov.reportPaths=coverage/bobapp/lcov.info




